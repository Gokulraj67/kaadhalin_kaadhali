import { useState } from "react";
import { Link } from "react-router-dom";
import { useQuotes } from "@/hooks/useQuotes";
import { QuoteCard } from "@/components/QuoteCard";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { Search, Filter } from "lucide-react";

const Home = () => {
  const { quotes, categories, loading } = useQuotes();
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("all");

  const filteredQuotes = quotes.filter(quote => {
    const matchesSearch = 
      quote.quote.toLowerCase().includes(searchTerm.toLowerCase()) ||
      quote.author.toLowerCase().includes(searchTerm.toLowerCase()) ||
      quote.description?.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesCategory = 
      selectedCategory === "all" || 
      quote.category_id === selectedCategory;
    
    return matchesSearch && matchesCategory;
  });

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-primary/5 via-background to-secondary/5">
        <div className="container mx-auto px-4 py-8">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto"></div>
            <p className="mt-4 text-muted-foreground">Loading quotes...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-primary/5 via-background to-secondary/5">
      <div className="container px-4 sm:px-6 lg:px-8 py-8">
        {/* Hero Section */}
        <div className="text-center mb-12">
          <h1 className="text-3xl sm:text-4xl font-bold mb-4 bg-gradient-to-r from-primary to-primary/60 bg-clip-text text-transparent">
           тЬи Kadhalin_kaadhali тЬи
          </h1>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            роЗродропроорпН родрпКроЯрпБроорпН ро╡ро╛ро░рпНродрпНродрпИроХро│рпН, роЙропро┐ро░рпН роиро┐ро▒рпИроХрпНроХрпБроорпН роЪро┐роирпНродройрпИроХро│рпН...

роЗроЩрпНроХрпБ роОройрпН рооройродро┐ро▓рпН рокро┐ро▒роирпНрод роорпЗро▒рпНроХрпЛро│рпНроХро│рпБроорпН, роЙроЩрпНроХро│ро╛ро▓рпН рокроХро┐ро░рокрпНрокроЯрпБроорпН роЙрогро░рпНро╡рпБроХро│рпБроорпН роТройрпНро▒ро╛роХ роЪрпЗро░рпНроХро┐ройрпНро▒рой.
роЕройрпНрокрпБ, роироЯрпНрокрпБ, ро╡ро╛ро┤рпНроХрпНроХрпИ, роХройро╡рпБ, роКроХрпНроХроорпН роОрой роОро▓рпНро▓ро╛ родро░рпБрогроЩрпНроХро│рпБроХрпНроХрпБроорпН роЙро░ро┐роп роорпЗро▒рпНроХрпЛро│рпНроХро│рпН роЗроЩрпНроХрпБ роЗроЯроорпНрокрпЖро▒рпБроорпН.

роЙроЩрпНроХро│родрпБ роЪрпКро▒рпНроХро│рпН рооро▒рпНро▒рпКро░рпБро╡ро░ро┐ройрпН роЗродропродрпНродрпИродрпН родрпКроЯрпНроЯрпБроЪрпН роЪрпЖро▓рпНро▓роЯрпНроЯрпБроорпН.
Kadhalin_kaadhali тАУ роЙроЩрпНроХро│рпН роЙрогро░рпНро╡рпБроХро│рпИ ро╡ро╛ро░рпНродрпНродрпИроХро│ро╛ро▓рпН роЙропро┐ро░рпНрокрпНрокро┐роХрпНроХрпБроорпН роЗроЯроорпН. тЭдя╕П
          </p>
          <Link
            to="/request-quote"
            className="inline-block cursor-pointer font-semibold px-4 py-2 rounded bg-gradient-to-r from-pink-500 via-red-400 to-yellow-400 text-white shadow-md hover:scale-105 transition-transform"
            tabIndex={0}
            role="button"
            aria-label="Add your own quote"
          >
           ЁЯУЭ роЙроЩрпНроХро│рпН роОрогрпНрогроЩрпНроХро│рпИ рокроХро┐ро░рпБроЩрпНроХро│рпН!
роЗрокрпНрокрпЛродрпБ роирпАроЩрпНроХро│рпН ро╡ро┐ро░рпБроорпНрокрпБроорпН роорпЗро▒рпНроХрпЛро│рпНроХро│рпИ Kadhalin_kaadhali-ропро┐ро▓рпН роирпЗро░роЯро┐ропро╛роХроЪрпН роЪрпЗро░рпНроХрпНроХро▓ро╛роорпН.
роЕройрпНрокрпБ, роироЯрпНрокрпБ, ро╡ро╛ро┤рпНроХрпНроХрпИ, роХройро╡рпБ, роКроХрпНроХроорпНтАж роОроирпНрод роЙрогро░рпНро╡ро╛роХ роЗро░рпБроирпНродро╛ро▓рпБроорпН,
роЙроЩрпНроХро│рпН ро╡ро╛ро░рпНродрпНродрпИроХро│рпН рооро▒рпНро▒ро╡ро░ро┐ройрпН роЗродропродрпНродрпИродрпН родрпКроЯрпНроЯрпБроЪрпН роЪрпЖро▓рпНро▓рпБроорпН. <u>роЙроЩрпНроХро│рпН Quotes-роР роЪрпЗро░рпНродрпНродрпБ, роЙро▓роХродрпНродрпБроЯройрпН рокроХро┐ро░рпБроЩрпНроХро│рпН!</u>
          </Link>
        </div>

        {/* Search and Filter */}
  <div className="mb-8 flex flex-col sm:flex-row gap-4">
          <div className="relative flex-1">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
            <Input
              placeholder="Search quotes, authors, or descriptions..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="pl-10"
            />
          </div>
          
          <div className="flex items-center gap-2">
            <Filter className="h-4 w-4 text-muted-foreground" />
            <Select value={selectedCategory} onValueChange={setSelectedCategory}>
              <SelectTrigger className="w-48">
                <SelectValue placeholder="Filter by category" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">All Categories</SelectItem>
                {categories.map((category) => (
                  <SelectItem key={category.id} value={category.id}>
                    {category.name}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
        </div>

        {/* Stats */}
  <div className="mb-8 flex flex-wrap gap-4 justify-center">
          <Badge variant="outline" className="text-sm">
            {filteredQuotes.length} quotes found
          </Badge>
          <Badge variant="outline" className="text-sm">
            {categories.length} categories
          </Badge>
        </div>

        {/* Quotes Grid */}
        {filteredQuotes.length === 0 ? (
          <div className="text-center py-12">
            <p className="text-muted-foreground text-lg">
              {searchTerm || selectedCategory !== "all" 
                ? "No quotes found matching your criteria" 
                : "No quotes available"}
            </p>
          </div>
        ) : (
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredQuotes.map((quote) => (
              <QuoteCard key={quote.id} quote={quote} />
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default Home;